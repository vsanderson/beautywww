<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		
		<link rel="stylesheet" type="text/css" href="./pimpmytextlab_files/style.css">
		<link rel="stylesheet" type="text/css" href="./pimpmytextlab_files/print.css" media="print">
		<script type="text/javascript" src="./pimpmytextlab_files/labs.js"></script>
		
		<style type="text/css">
			#netterms {
				line-height: 2em;
			}
			
			#netterms li {
				display: inline;
				padding: 0.2em 0.5em;
				border-left: thin dotted gray;
				border-right: thin dotted gray;
			}
			
			.sectionheader {
				margin-top: 14em;
			}
		</style>

		<style type="text/css" media="print">
			h2 {
				margin-top: 1em !important;
				padding-top: 0em !important;
			}
		</style>

		<title>CSE 190 M Lab 5 (JavaScript for Interactive UIs)</title>
	</head>

	<body>
		<h1>
			University of Washington, CSE 190 M<br>
			Lab 5: JavaScript for Interactive User Interfaces (
		</h1>

		<p class="credit">
			original lab idea and code by Victoria Kirst and Kevin Wallace; revised by Brian Le and Marty Stepp
		</p>

		<p>
			The purpose of this lab is to practice using basic JavaScript and UI controls to create interactive web pages.

			<strong>You very likely won't finish all of the exercises.   Just finish as much as you can within the allotted time.  You do not need to work on this lab any more after you leave your lab session, though you may if you like.</strong>
		</p>


		<h2>Lab 5: Pimp My Text!</h2>

		<p>
			The theme of this lab is that we'll be writing a page where the user can type some text into a box, and by clicking on various UI controls, we'll allow the user to "pimp out" the text by giving it some funny styling.  You are given a skeleton HTML file named <a href="pimpmytextlab_files/pimpmytext.htm"><samp>pimpmytext.html</samp></a> (right-click and select <q>Save Link As...</q>) that contains a basic HTML shell and page header.  This skeleton already links to a CSS file named <samp>pimpmytext.css</samp> that defines all the simple styles you should need for this lab.  You do not have to edit this provided stylesheet or write any CSS code today.  The skeleton also links to a JavaScript library named Prototype that we'll use in this course, which gives us the ability to use the <code>$()</code> function as shown in class.  Please don't remove the links to the provided CSS or Prototype JS files from the page.
		</p>
			
		<p>
			You will write a JavaScript file called <code>pimpmytext.js</code> that will manipulate text in various ways throughout the following exercises.
		</p>

		<p>
		</p>


		<h2>Lab 5 Resources</h2>
		<ul>
			
			
			<li>
				<em>Web Programming Step by Step</em> textbook Ch. 7
			</li>

			<li>
				<a class="popup" href="https://addons.mozilla.org/en-US/firefox/addon/1843">Install Firebug</a>
			</li>

			<li>
				<a class="popup" href="http://webster.cs.washington.edu/jslint/">JSLint</a> JavaScript code checker
			</li>
			
			
		</ul>

		
		<h2>Exercises for Today:</h2>
		
		<ol>
			<li><a href="https://courses.cs.washington.edu/courses/cse190m/09sp/labs/5-pimpify/#ex1">Create UI Elements</a></li>
			<li><a href="https://courses.cs.washington.edu/courses/cse190m/09sp/labs/5-pimpify/#ex2">Bigger Pimpin' Button</a></li>
			<li><a href="https://courses.cs.washington.edu/courses/cse190m/09sp/labs/5-pimpify/#ex3">Bling Checkbox</a></li>
			<li><a href="https://courses.cs.washington.edu/courses/cse190m/09sp/labs/5-pimpify/#ex4">Snoopify</a></li>
			<li><a href="https://courses.cs.washington.edu/courses/cse190m/09sp/labs/5-pimpify/#ex5">Even More Gangsta</a></li>
		</ol>


		<h2 id="ex1">Exercise 1: Create UI Elements (roughly 15 minutes)</h2>

		<p>
			The first task is to expand <samp>pimpmytext.html</samp> by adding UI controls.  Add HTML code for the following:
		</p>
		
		<ul>
			<li>
				Add a field for users to enter <em>large</em> (multi-line) amounts of text. It should be 4 rows by 30 columns in size.  Wrap it in a bordered field set box with the label "Text".
			</li>
			<li>
				Add a second bordered field set box labeled "Pimp It" that contains the following controls:
				<ul>
					<li>A button labeled "Bigger Pimpin'!"</li>
					<li>A checkbox labeled "Bling"</li>
				</ul>
			</li>
		</ul>
		
		<p>
			You should roughly match the output below (between, but not including, the thick black lines).  (Don't worry too much about getting the exact output; the important thing is to have the proper UI elements!)
		</p>

		
		<div class="expectedoutput">
			<img src="./pimpmytextlab_files/output1.png" alt="expected output">
		</div>

		
		<h2 id="ex2">Exercise 2: Bigger Pimpin' Button (roughly 10 minutes)</h2>
 
		<p>
			Now you're going to create a basic JavaScript file so that when the user clicks "Bigger Pimpin'!", the text in the main text area will get larger.  Do the following:
		</p>
		
		<ol>
			<li>
				<p>
					Create a new file and saving it as <samp>pimpmytext.js</samp>.  Link your XHTML page to this script file.  You may want to make sure that this is working by simply putting an <code>alert</code> in your .js file and making sure that the alert pops up when you refresh the page.  For example, the following could be the entire initial contents of the file:
				</p>
				
<pre>alert("Hello World!");
</pre>
			</li>

			<li>
				Add JavaScript code (and any necessary modifications to the XHTML) so that when the user clicks the "Bigger Pimpin'!" button, the size of the text in the main text area changes to <strong>24pt</strong>.

				<p>
					<em>Hint:</em> Remember that most CSS properties translate directly into properties of the <code>.style</code> property within that element's DOM object. For example, the following CSS <code>color</code> declaration:
				</p>

<pre>#<var>id</var> {
  color: red;
}
</pre>
				
				<p>â€¦translates into:</p>
				
<pre>$("<var>id</var>").style.color = "red";
</pre>

				<p>
					For properties that have a hyphen in them, such as <code>background-color</code>, the hyphens are removed and subsequent words are capitalized:
				</p>
				
<pre>$("<var>id</var>").style.backgroundColor = "red";
</pre>
				
				<p>
					Don't forget to set the property to a string with proper <code>
					pt</code> units, not an integer.  If your code doesn't work, look for red Firebug error messages on the bottom-right in your browser, or try running <a class="popup" href="http://webster.cs.washington.edu/jslint/">JSLint</a>.
				</p>
			</li>
		</ol>

		<p>
			Clicking the button should cause an appearance like the one below.
		</p>

		
		<div class="expectedoutput">
			<img src="./pimpmytextlab_files/output2.png" alt="expected output">
		</div>
		
		
		
		<h2 id="ex3">Exercise 3: Bling Checkbox (roughly 15 minutes)</h2>
		
		<p>
			You are now going to add an event handler so that when the user checks the "Bling" checkbox, the main text area will have some styles applied to it.
		</p>
		
		<ol>
			<li>
				Add JavaScript code (and any necessary modifications to the XHTML) so that when the user checks the box, the text in the text area becomes bold.  You can test whether a given checkbox or radio button is checked by examining the <code>checked</code> property of the box's DOM object.  When the box is unchecked, the style should go back to normal.
			</li>
			
			<li>
				Once you get the bold aspect to work, add the following additional effects to also take place when the Bling checkbox is checked:
				
				<ul>
					<li>underline the text (this is the CSS <code>text-decoration</code> property)</li>
					<li>change its color to <code>green</code></li>
					<li>make it blink (this is <em>also</em> the CSS <code>text-decoration</code> property)</li>
					<li>any two other styles of your choice</li>
				</ul>
			</li>
		</ol>

		<p>
			The best design for this feature would be to place the above style rules into a class in your .css file and apply that class to the element when the box is checked.  After checking the box, your text should look something like this:
		</p>
		
		<div class="expectedoutput">
			<img src="./pimpmytextlab_files/output3.png" alt="expected output">
		</div>

		
				
		<h2 id="ex4">Exercise 4: Snoopify (roughly 10 minutes)</h2>
 		
		<p>
			Now we will transforming or "Snoopifying" the actual content of the text.
		</p>
		
		<ol>
			<li>
				Write a new button named Snoopify that, when clicked, modifies the text in the text area by capitalizing it and adding an exclamation point to the end of it.  You will want to use the <code>value</code> property of the text area's DOM element.
			</li>
			
			<li>
				Modify your Snoopify button so that it also adds a suffix of <code>"-izzle"</code> to the last word of each sentence.  (A sentence being a string of text that ends in a period character, <code>"."</code> .)  Do this using the String/array methods <code>split</code> and <code>join</code>.  For example, if you wanted to change all spaces with underscores in a string, you could write:
				
				<pre>var str = "How are you?"
var parts = str.split(" ");  // ["How", "are", "you?"]
str = parts.join("_");       // "How_are_you?"
</pre>
			</li>
		</ol>

		<p>
			After finishing this exercise and clicking the button, your text should look something like this:
		</p>
		
		<hr class="outputseparator">
		<p>
			<img src="./pimpmytextlab_files/output4.png" alt="expected output">
		</p>
		<hr class="outputseparator">
		
		
		<h2 id="ex6">Exercise 5 (for uber-l33t h4x0rZ only): Even More Gangsta</h2>
		
		<p>
			If you finish all of the above, add the following to your page:
		</p>

		<ol>
			<li>
				When the "Bling" checkbox is checked, also set your overall page to have a background image of: <br>
			
				<code>http://www.cs.washington.edu/education/courses/190m/09sp/labs/5-pimpify/hundred-dollar-bill.jpg</code>
			</li>
			
			<li>Make it so that when the "Bigger Pimpin'!" button is clicked, rather than hard-setting the font size to 24pt, you'll make it 2pt larger than its current size.  You may want to use the <code>parseInt</code> function to help you do this.</li>
			
			<li>Set a timer so that when the Bigger Pimpin' button is clicked, instead of just increasing the font size once, it will repeatedly increase the font size by 2pt every 500ms.</li>
			
			<li>(really tricky) Add a "Malkovitch" button that causes words of five characters or greater in length in your main text area to be replaced with the word "Malkovich". Consider compound words (i.e., contractions or hyphenated terms) to be separate words.  (Inspired by the <a href="http://lfw.org/jminc/index.html">Malkovitch Mediator</a> by Ka-Ping Yee, inspired by the film <a href="http://www.youtube.com/watch?v=Ur3CQE8xB3c">Being John Malkovitch</a>)</li>
			
			<li>
				Add an "Igpay Atinlay" button that converts the text to Pig Latin.  The rules of <q>Pig Latin</q> are:
				<ol>
					<li>Words beginning in a consonant (or consonant cluster) have that consonant (or consonant cluster) moved to the end and <var>-ay</var> tacked on following.</li>
					<li>Words beginning in a vowel simply have <var>-ay</var> tacked on the end.</li>
				</ol>
			</li>
			
			<li>Add any other crazy styling or pimpin' you want to the page.  Show us your best stuff, playa!</li>
		</ol>


		<div class="w3c">
			<a href="http://validator.w3.org/check/referer"><img src="./pimpmytextlab_files/w3c-xhtml11.png" alt="Valid XHTML 1.1"></a>
			<a href="http://jigsaw.w3.org/css-validator/check/referer"><img src="./pimpmytextlab_files/w3c-css.png" alt="Valid CSS!"></a>
		</div>

		<!-- Google Analytics -->
		<script type="text/javascript">
			var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
			document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
		</script><script src="./pimpmytextlab_files/ga.js" type="text/javascript"></script>

		<script type="text/javascript">
			var pageTracker = _gat._getTracker("UA-2729135-5");
			pageTracker._initData();
			pageTracker._trackPageview();
		</script>
	


</body></html>